{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\yashj\\\\OneDrive\\\\Desktop\\\\Yash Jain\\\\NextJS\\\\news-app\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://yashjain331299:ozDorK6ki9aLKfCw@cluster0.mjcknqw.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //Fetch the data for a single meetup.\n  const meetupid = context.params.meetupId;\n  console.log(meetupid);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://cdn.pixabay.com/photo/2012/08/27/14/19/mountains-55067__340.png\",\n        id: meetupid,\n        title: \"Some title\",\n        description: \"Some description\",\n        address: \"Some address\"\n      }\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["C:/Users/yashj/OneDrive/Desktop/Yash Jain/NextJS/news-app/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetailsPage","props","meetupData","image","title","description","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetupid","console","log","id"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,sBAAO;AAAA,2BACH,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAAtC;AAA6C,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAArE;AAA4E,MAAA,WAAW,EAAEH,KAAK,CAACC,UAAN,CAAiBG,WAA1G;AAAuH,MAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAAjJ;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAGH,CAJD;;AAMA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,gHAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AAAV,KAAL,CAAlB;AAFJ,GAAP;AAIH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AACA,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,SAAO;AACHzB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,yEADC;AAER0B,QAAAA,EAAE,EAAEH,QAFI;AAGRtB,QAAAA,KAAK,EAAE,YAHC;AAIRC,QAAAA,WAAW,EAAE,kBAJL;AAKRC,QAAAA,OAAO,EAAE;AALD;AADT;AADJ,GAAP;AAWH;AAED,eAAeN,iBAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetailsPage = (props) => {\r\n    return <>\r\n        <MeetupDetail image={props.meetupData.image} title={props.meetupData.title} description={props.meetupData.description} address={props.meetupData.address} />\r\n    </>\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://yashjain331299:ozDorK6ki9aLKfCw@cluster0.mjcknqw.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    //Fetch the data for a single meetup.\r\n    const meetupid = context.params.meetupId;\r\n\r\n    console.log(meetupid);\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                image: \"https://cdn.pixabay.com/photo/2012/08/27/14/19/mountains-55067__340.png\",\r\n                id: meetupid,\r\n                title: \"Some title\",\r\n                description: \"Some description\",\r\n                address: \"Some address\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetailsPage;"]},"metadata":{},"sourceType":"module"}