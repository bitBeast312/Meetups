{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\yashj\\\\OneDrive\\\\Desktop\\\\Yash Jain\\\\NextJS\\\\news-app\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport Head from 'next/head';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetailsPage = function MeetupDetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"React Meetup - \", props.meetupData.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = MeetupDetailsPage;\nexport var __N_SSG = true;\nexport default MeetupDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailsPage\");","map":{"version":3,"sources":["C:/Users/yashj/OneDrive/Desktop/Yash Jain/NextJS/news-app/pages/[meetupId]/index.js"],"names":["Head","MeetupDetail","MeetupDetailsPage","props","meetupData","title","description","image","address"],"mappings":";;;;;;AACA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACjC,sBAAO;AAAA,4BACH,QAAC,IAAD;AAAA,8BACI;AAAA,sCAAuBA,KAAK,CAACC,UAAN,CAAiBC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,eAKH,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAAtC;AAA6C,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAArE;AAA4E,MAAA,WAAW,EAAEF,KAAK,CAACC,UAAN,CAAiBE,WAA1G;AAAuH,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBI;AAAjJ;AAAA;AAAA;AAAA;AAAA,aALG;AAAA,kBAAP;AAOH,CARD;;KAAMN,iB;;AAiDN,eAAeA,iBAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport Head from 'next/head';\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetailsPage = (props) => {\r\n    return <>\r\n        <Head>\r\n            <title>React Meetup - {props.meetupData.title}</title>\r\n            <meta name=\"description\" content={props.meetupData.description} />\r\n        </Head>\r\n        <MeetupDetail image={props.meetupData.image} title={props.meetupData.title} description={props.meetupData.description} address={props.meetupData.address} />\r\n    </>\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://yashjain331299:ozDorK6ki9aLKfCw@cluster0.mjcknqw.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://yashjain331299:ozDorK6ki9aLKfCw@cluster0.mjcknqw.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n    const selectedMeetup = await meetupsCollection.findOne({ _id: new ObjectId(meetupId) });\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n                id: selectedMeetup._id.toString(),\r\n                description: selectedMeetup.description\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetailsPage;"]},"metadata":{},"sourceType":"module"}